using System;

public class Array
  {
	  public static void Resize(ref int[] source, int newsize)
	    {
	      int[] temp=new int[newsize];
		    for(int i=0; i<source.Length; i++)
		      {
			      temp[i]=source[i];
		      }
		    source=temp;
	    }
  }
public class DynamicIntegerArray
  {
    private int[] buffer=new int[5];
    /*public void Set_Item(int index,int item)
		  {
			  if (index >= buffer.Length)
			    {
				    Array.Resize(ref buffer, index+1);
			    }
			  buffer[index]=item;	
      }
       
     public int Get_Item(int index)
		  {
        return buffer[index];
		  }
		 
     public void Clear(){}*/
		
		public int this[int index]
      {
			  set
          {
				    if (index >= buffer.Length)
			        {
				        Array.Resize(ref buffer, index+10);
			        }
			      buffer[index] = value;
			    }
			  get
          {
			      return buffer[index];
			    }
			}
	}

public class Program
  {        
    public static  void Main()
      {
          DynamicIntegerArray _intArray=new DynamicIntegerArray();
          //_intArray.Set_Item(0,10); 
		      _intArray[0]=10;
		      _intArray[1] = 20;
          _intArray[2] = 40;
          _intArray[3] = 50;
          _intArray[4] = 60;
          _intArray[5] = 70;//Exception
          _intArray[6] = 80;
          _intArray[7] = 90;
          _intArray[8] = 100;
          /*_intArray.Set_Item(1,20);
          _intArray.Set_Item(2,40);
          _intArray.Set_Item(3,50);
          _intArray.Set_Item(4,60);
          _intArray.Set_Item(5,70);//Exception
          _intArray.Set_Item(6,80);
          _intArray.Set_Item(7,90);
          _intArray.Set_Item(8,100);*/
          //int _value=_intArray[8];
          int _value = _intArray[0];
		      
          Console.WriteLine(_value);
		      int _value1 = _intArray[8];
		      Console.WriteLine(_value1);
      }
        
    }
